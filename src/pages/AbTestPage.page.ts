import { Page, BrowserContext, expect } from '@playwright/test';

/**
 * –ö–ª–∞—Å –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–æ—é A/B Test
 */
export class AbTestPage {
    page: Page; // –û–±'—î–∫—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏ Playwright

    /**
     * –õ–æ–∫–∞—Ç–æ—Ä –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ A/B Test
     */
    private headingLocator = 'h3';

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª–∞—Å—É AbTestPage
     * @param page - –æ–±'—î–∫—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏ Playwright
     */
    constructor(page: Page) {
        this.page = page; // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–µ—Ä–µ–¥–∞–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    }

    /**
     * –ü–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É A/B Test
     *
     * @returns Promise<void>
     */
    async goto(): Promise<void> {
        await this.page.goto('/abtest');
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –∑–∞–≥–æ–ª–æ–≤–∫–∞ h3 –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
     *
     * @returns Promise<string> - —Ç–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
     */
    async getHeadingText(): Promise<string> {
        return this.page.locator(this.headingLocator).textContent();
    }

    /**
     * –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É —Ç–∞ –∫—É–∫—ñ–≤ –±—Ä–∞—É–∑–µ—Ä–∞.
     * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –µ–º—É–ª—è—Ü—ñ—ó –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ –∫–æ–∂–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó.
     *
     * @param context - –æ–±'—î–∫—Ç BrowserContext –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫—É–∫–∞–º–∏ —Ç–∞ –∫–µ—à–µ–º
     * @returns Promise<void>
     */
    private async clearCacheAndCookies(context: BrowserContext): Promise<void> {
        // –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫—É–∫—ñ–≤
        await context.clearCookies();

        // –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫–µ—à—ñ–≤ –±—Ä–∞—É–∑–µ—Ä–∞ —á–µ—Ä–µ–∑ Cache API
        await this.page.evaluate(() =>
            caches.keys().then(keys => keys.forEach(key => caches.delete(key)))
        );

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ö–µ–¥–µ—Ä–∏ –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
        await this.page.setExtraHTTPHeaders({
            'Cache-Control': 'no-cache, no-store, must-revalidate'
        });
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –ø—Ä–∏ –æ—á–∏—â–µ–Ω–Ω—ñ –∫–µ—à—É —Ç–∞ –∫—É–∫—ñ–≤
     * (–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–±–æ—Ç–∏ A/B —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è).
     *
     * –õ–æ–≥—ñ–∫–∞:
     * - –ß–∏—Ç–∞—î–º–æ –ø–µ—Ä—à–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
     * - –û—á–∏—â–∞—î–º–æ –∫–µ—à —Ç–∞ –∫—É–∫–∏
     * - –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É —ñ —á–∏—Ç–∞—î–º–æ –Ω–æ–≤–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
     * - –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–º—ñ–Ω–∏–≤—Å—è –∑–∞–≥–æ–ª–æ–≤–æ–∫
     *
     * @param context - –æ–±'—î–∫—Ç BrowserContext –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –∫—É–∫—ñ–≤
     * @param attempts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø—Ä–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 10)
     * @returns Promise<void>
     */
    async checkHeadlineWithCacheClear(context: BrowserContext, attempts: number = 10): Promise<void> {
        const firstHeading = await this.getHeadingText(); // –ó—á–∏—Ç—É—î–º–æ –ø–µ—Ä—à–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        expect(firstHeading).not.toBeNull(); // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —ñ—Å–Ω—É—î

        console.log(`üìù First headline: ${firstHeading}`);

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤
        for (let i = 0; i < attempts; i++) {
            console.log(`üîÑ Attempt ${i + 1}: clearing cache and cookies...`);

            // –û—á–∏—â–∞—î–º–æ –∫–µ—à —ñ –∫—É–∫–∏
            await this.clearCacheAndCookies(context);

            // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É
            await this.page.reload();

            // –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
            const newHeading = await this.getHeadingText();
            expect(newHeading).not.toBeNull(); // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ –Ω–æ–≤–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —ñ—Å–Ω—É—î

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–º—ñ–Ω–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            if (newHeading !== firstHeading) {
                console.log(`‚úÖ Headline changed on attempt ${i + 1}: ${newHeading}`);
                return; // –Ø–∫—â–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–º—ñ–Ω–∏–≤—Å—è - –≤–∏—Ö–æ–¥–∏–º–æ –∑ –º–µ—Ç–æ–¥—É
            }
        }

        // –Ø–∫—â–æ –ø—ñ—Å–ª—è –≤—Å—ñ—Ö —Å–ø—Ä–æ–± –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è - –≤–∏–∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É
        throw new Error('‚ùå Headline did not change after multiple attempts.');
    }
}
